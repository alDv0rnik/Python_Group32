Домашнее задание по уроку № 5
Настройка после установки git bash

giif config –global user.name <username>
git config –global user.email <user email>
1.	Создать локальную директорию и инициировать ее для git
После открытия Git Bash выйти из текущей директории и зайти в нужную:
а) Выйти из  директории
    cd  ..
б) Зайти в нужную директорию с именем <name>
    cd  <name>
в) Создать директорий с именем <name>
   mkdir  <name>
       Когда зашли в нужную директорию создадим объекты, папки для работы с проектом (инициализация)
	   git init
2.	Создать(открыть) текстовый файл в директории и выполнить коммит
а) создаем(открыть) файл с именем <имя файла>
nano <имя файла>
внести любой текст -> выйти……CTRL+X  -> сохраняем……Y -> можем изменить или согласится с предлагаемым именем…….Enter
б) добавим в область подготовленных файлов
git add <имя файла> 
или весь проект 
git add .
в)выполняем commit с комментарием ‘Add new file’
git  commit  –m  ‘Add new file’

3.	Создать удаленный репозиторий на GitHub 
Создаем на git hub у пользователя <пользователь> проект <project> удаленно с локального 
Git remote add origin https://github.com/<пользователь>/<project>.git

4.	Отправить (Push) локальный репозиторий в GitHub
git push 

5.	Создать новую ветку (назвать develop) и переключиться на нее
а) создание новой ветки (создает ветку от той где мы находимся)
git branch develop
б) переключение на ветку
git checkout develop

6.	Создать новую ветку 'develop1' от 'develop' и переключиться на нее
а) создание новой ветки (создает ветку от той где мы находимся, т.е. находясь в 'develop')
git branch develop1
б) переключение на ветку
git checkout develop1

7.	Добавить первую строку в текстовый файл, выполнить коммит и отправить в репозиторий
Выполняем п.2 и п.4
Можем контролировать статус git status 

8.	Клонировать ваш репозиторий с GitHub в отдельную директорию
а)Выполняем п.1
б) заходим в нужный проект в GitHub -> нажимаем на кнопку <>Code -> закладка HTTPS -> щелкаем на ссылку <url>
в) клонируем проект
git clone <url>

9.	Создать другую ветку 'develop2' от ветки 'develop' и переключиться на нее, используя клонированный проект
а)переключение на ветку 'develop'
git checkout develop
б) создание новой ветки (создает ветку от той где мы находимся, т.е. находясь в 'develop')
git branch develop2

10.	Добавить первую строку в текстовый файл (отличный от первой ветки), выполнить коммит и отправить в удаленный реозиторий
а) переключится на ветку develop2
git checkout develop2
Выполнить п.2 и п.4

11.	Переключиться на 'develop'
git checkout develop

12.	Объединить (merge) первую ветку и отправить (push) изменения
git merge  develop1 

если возник конфликт открываем файл <имя файла>, где возник конфликт 
а) выполняем п.2а
б) просмотрим историю commit
git log –-oneline
в)выполняем пункт 2б и 2в
г) повторяем команду
git merge  develop1 

выполняем п.4
13.	Объединить (merge) вторую ветку и отправить (push) изменения
Выполняем п.12 но не с develop1 а с develop2
14.	Разрешить конфликты, если необходимо
См. п.12 по возникновению конфликта



ПРОБА С ДОМА ЗАГРУЗИТЬ ИЗМЕНЕНИЯ 
